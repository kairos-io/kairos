# WARNING: This is a base image used internally for Kairos, it is not meant to be built directly, use the images/Dockerfile.kairos-* files instead
###############################################################
####                           ARGS                        ####
###############################################################
# WARNING: While some of the ARGs are not used in this file, they are used in the images/Dockerfile.kairos-* files
# TARGETARCH is used to determine the architecture of the image, it is already set by Docker so it doesn't need to be defined here
ARG FAMILY=ubuntu
# Currently supported flavors are:
#   - ubuntu
ARG FLAVOR
#   - 20.04
#   - 22.04
#   - 23.10
ARG FLAVOR_RELEASE
# Currently supported models are:
#   - generic
#   - rpi4
#   - rpi3
ARG MODEL=generic
ARG BASE_IMAGE
ARG VARIANT
ARG VERSION
ARG FRAMEWORK_VERSION=main

###############################################################
####                     Upstream Images                   ####
###############################################################
FROM ${BASE_IMAGE} AS ubuntu-23.10-upstream

FROM ${BASE_IMAGE} AS ubuntu-20.04-upstream

FROM ${BASE_IMAGE} AS ubuntu-22.04-upstream


###############################################################
####                Pre-Process Common to All              ####
###############################################################
FROM ${FLAVOR}-${FLAVOR_RELEASE}-upstream AS common
ENV DEBIAN_FRONTEND=noninteractive

RUN apt-get update \
  && apt-get install -y --no-install-recommends \
    gnupg \
    software-properties-common \
  && add-apt-repository ppa:oibaf/test \
  && apt-get update \
  && apt-get install -y --no-install-recommends \
    conntrack \
    console-data \
    cloud-guest-utils \
    coreutils \
    cryptsetup \
    curl \
    debianutils \
    dosfstools \
    dracut \
    dracut-network \
    e2fsprogs \
    fdisk \
    file \
    gawk \
    gdisk \
    grub2-common \
    haveged \
    iproute2 \
    iptables \
    iputils-ping \
    jq \
    kbd \
    krb5-locales \
    less \
    lldpd \
    lvm2 \
    nano \
    nbd-client \
    neovim \
    nohang \
    open-iscsi \
    open-vm-tools \
    openssh-server \
    parted \
    rsync \
    snapd \
    snmpd \
    squashfs-tools \
    sudo \
    systemd \
    systemd-timesyncd \
    tar \
    ubuntu-advantage-tools \
    xz-utils \
    zstd \
    tpm2-* \
    && apt-get remove -y unattended-upgrades && apt-get clean && rm -rf /var/lib/apt/lists/*

###############################################################
####           Common to a Single Architecture             ####
###############################################################

FROM common AS amd64
RUN apt-get update \
  && apt-get install -y --no-install-recommends \
    dmsetup \
    efibootmgr \
    grub2 \
    grub-efi-amd64-bin \
    grub-efi-amd64-signed \
    grub-pc-bin \
    isc-dhcp-common \
    mdadm \
    ncurses-term \
    networkd-dispatcher \
    nfs-common \
    os-prober \
    packagekit-tools \
    publicsuffix \
    shared-mime-info \
    thermald \
    xdg-user-dirs \
    xxd \
    zerofree \
    zfsutils-linux \
    && apt-get clean && rm -rf /var/lib/apt/lists/*

FROM common AS arm64
RUN apt-get update \
  && apt-get install -y --no-install-recommends \
    grub-efi-arm64 \
    grub-efi-arm64-bin \
    grub-efi-arm64-signed \
    keyutils \
    && apt-get clean && rm -rf /var/lib/apt/lists/*

###############################################################
####            Common to an Arch and Flavor               ####
###############################################################
FROM ${TARGETARCH} AS base-ubuntu-20.04
RUN apt-get update && apt-get install -y --no-install-recommends \
    file \
    fuse \
    patch \
    policykit-1 \
    && apt-get clean && rm -rf /var/lib/apt/lists/*

FROM ${TARGETARCH} AS base-ubuntu-22.04
RUN apt-get update && apt-get install -y --no-install-recommends \
    dracut-live \
    firmware-sof-signed \
    fuse3 \
    pigz \
    polkitd \
    && apt-get clean && rm -rf /var/lib/apt/lists/*

FROM base-ubuntu-20.04 AS amd64-base-ubuntu-20.04
# If a kernel is already installed, don't try to install it again, this way the base image can
# be non-hwe for older releases
RUN apt-get update
RUN [ -z "$(ls -A /lib/modules/)" ] && apt-get install -y --no-install-recommends \
    linux-image-generic-hwe-20.04 || true
RUN apt-get clean && rm -rf /var/lib/apt/lists/*

FROM base-ubuntu-22.04 AS amd64-base-ubuntu-22.04
RUN apt-get update
# If a kernel is already installed, don't try to install it again, this way the base image can
# be non-hwe for older releases
RUN [ -z "$(ls -A /lib/modules/)" ] && apt-get install -y --no-install-recommends \
    linux-image-generic-hwe-22.04 || true
RUN apt-get clean && rm -rf /var/lib/apt/lists/*

FROM amd64-base-ubuntu-22.04 AS amd64-ubuntu-23.10
FROM amd64-base-ubuntu-22.04 AS amd64-ubuntu-22.04
FROM amd64-base-ubuntu-20.04 AS amd64-ubuntu-20.04

FROM base-ubuntu-22.04 AS arm64-ubuntu-23.10
FROM base-ubuntu-22.04 AS arm64-ubuntu-22.04
FROM base-ubuntu-20.04 AS arm64-ubuntu-20.04

###############################################################
####               Common to a Single Model                ####
###############################################################
FROM ${TARGETARCH}-${FLAVOR}-${FLAVOR_RELEASE} AS generic
RUN apt-get update && apt-get install -y --no-install-recommends \
    linux-base \
    qemu-guest-agent \
    && apt-get clean && rm -rf /var/lib/apt/lists/*

FROM arm64-${FLAVOR}-${FLAVOR_RELEASE} AS rpicommon
RUN apt-get update && apt-get install -y --no-install-recommends \
    linux-raspi \
    && apt-get clean && rm -rf /var/lib/apt/lists/*
COPY rpi/config.txt /boot/config.txt

FROM rpicommon AS ubuntu-20.04-rpi
RUN apt-get update && apt-get install -y --no-install-recommends \
    linux-firmware-raspi2 \
    && apt-get clean && rm -rf /var/lib/apt/lists/*

FROM rpicommon AS ubuntu-23.10-rpi
RUN apt-get update && apt-get install -y --no-install-recommends \
    linux-firmware-raspi \
    linux-modules-extra-raspi \
    && apt-get clean && rm -rf /var/lib/apt/lists/*

FROM generic AS amd64-ubuntu-23.10-generic
FROM generic AS amd64-ubuntu-22.04-generic
FROM generic AS amd64-ubuntu-20.04-generic
FROM generic AS arm64-ubuntu-23.10-generic
# If a kernel is already installed, don't try to install it again, this way the base image can
# be non-hwe for older releases
RUN [ -z "$(ls -A /lib/modules/)" ] && apt-get update && apt-get install -y --no-install-recommends \
    linux-image-generic-hwe-22.04 || true
RUN apt-get clean && rm -rf /var/lib/apt/lists/*
FROM ubuntu-23.10-rpi AS arm64-ubuntu-23.10-rpi3
FROM ubuntu-23.10-rpi AS arm64-ubuntu-23.10-rpi4
FROM ubuntu-23.10-rpi AS arm64-ubuntu-22.04-rpi3
FROM ubuntu-23.10-rpi AS arm64-ubuntu-22.04-rpi4
FROM ubuntu-20.04-rpi AS arm64-ubuntu-20.04-rpi3
FROM ubuntu-20.04-rpi AS arm64-ubuntu-20.04-rpi4
FROM ubuntu-20.04-upstream AS arm64-ubuntu-20.04-nvidia-jetson-agx-orin

###############################################################
####                Common to a Single Flavor              ####
###############################################################
FROM ${TARGETARCH}-${FLAVOR}-${FLAVOR_RELEASE}-${MODEL} AS ubuntu-23.10
RUN apt-get update \
  && apt-get install -y --no-install-recommends \
    dbus-user-session \
    pkg-config \
    systemd-hwe-hwdb \
    systemd-resolved \
    && apt-get clean && rm -rf /var/lib/apt/lists/*

FROM ${TARGETARCH}-${FLAVOR}-${FLAVOR_RELEASE}-${MODEL} AS ubuntu-22.04
RUN apt-get update
# If the generic kernel is installed we don't want to install HWE related packages
SHELL ["/bin/bash", "-o", "pipefail", "-c"]
RUN apt-cache search linux-image-generic | grep hwe &> /dev/null && apt-get install -y --no-install-recommends \
    systemd-hwe-hwdb
RUN apt-get clean && rm -rf /var/lib/apt/lists/*

FROM ${TARGETARCH}-${FLAVOR}-${FLAVOR_RELEASE}-${MODEL} AS ubuntu-20.04

###############################################################
####               Post-Process Common to All              ####
###############################################################
FROM ${FLAVOR}-${FLAVOR_RELEASE} AS all

# compress firmware
RUN find /usr/lib/firmware -type f -execdir zstd --rm -9 {} \+
# compress modules
RUN find /usr/lib/modules -type f -name "*.ko" -execdir zstd --rm -9 {} \+

RUN systemctl enable systemd-networkd
RUN systemctl enable ssh

# Fixup sudo perms
RUN chown root:root /usr/bin/sudo && chmod 4755 /usr/bin/sudo