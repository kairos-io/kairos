name: Release AMD64 artifacts

on:
  push:
    tags:
      - v*
permissions: read-all
jobs:
  build-core:
    uses: ./.github/workflows/reusable-release.yaml
    secrets: inherit
    permissions:
      id-token: write  # OIDC support
      contents: write
      actions: read
      security-events: write
    strategy:
      fail-fast: false
      matrix:
        model: ["generic"]
        variant: ["core"]
        arch: ["amd64"]
        base_image:
          - "opensuse/leap:15.6"
          - "opensuse/tumbleweed"
          - "ubuntu:20.04"
          - "ubuntu:22.04"
          - "ubuntu:24.04"
          - "ubuntu:24.10"
          - "alpine:3.19"
          - "fedora:40"
          - "debian:12"
          - "rockylinux:9"
    with:
      base_image: ${{ matrix.base_image }}
      arch: ${{ matrix.arch }}
      variant: ${{ matrix.variant }}
      model: ${{ matrix.model }}
  build-uki-container-image:
    uses: ./.github/workflows/reusable-release.yaml
    secrets: inherit
    permissions:
      id-token: write  # OIDC support
      contents: write
      actions: read
      security-events: write
    strategy:
      matrix:
        variant: ["core"]
        model: ["generic"]
        arch: ["amd64"]
        base_image:
          - "ubuntu:24.04"
          - "fedora:40"
        include:
          - base_image: "ubuntu:24.04"
            variant: "standard"  # let it use the latest k3s version released for now
    with:
      base_image: ${{ matrix.base_image }}
      arch: ${{ matrix.arch }}
      variant: ${{ matrix.variant }}
      model: ${{ matrix.model }}
      trusted_boot: "true"
  get-k3s-versions:
    runs-on: ubuntu-latest
    outputs:
      kubernetes_versions: ${{ steps.get-k3s-releases.outputs.kubernetes_versions }}
    steps:
      - run: |
          sudo apt update && sudo apt install -y jq curl
      - name: Get latest k3s releases
        id: get-k3s-releases
        run: |
          kubernetes_versions=$(curl -s https://api.github.com/repos/k3s-io/k3s/releases | jq -r '[.[] | select(.prerelease == false and .draft == false and (.tag_name | test("rc") | not))] | .[:3] | .[].tag_name' | tr '\n' ' ')
          echo "kubernetes_versions=$kubernetes_versions" >> $GITHUB_OUTPUT
  build-standard:
    uses: ./.github/workflows/reusable-release.yaml
    secrets: inherit
    needs:
      - get-k3s-versions
    permissions:
      id-token: write  # OIDC support
      contents: write
      actions: read
      security-events: write
    strategy:
      fail-fast: false
      matrix:
        kubernetes_version: ${{ needs.get-k3s-versions.outputs.kubernetes_versions }}
        model: ["generic"]
        variant: ["standard"]
        arch: ["amd64"]
        base_image:
          - "opensuse/leap:15.6"
          - "opensuse/tumbleweed"
          - "ubuntu:20.04"
          - "ubuntu:22.04"
          - "ubuntu:24.04"
          - "ubuntu:24.10"
          - "alpine:3.19"
          - "fedora:40"
          - "debian:12"
          - "rockylinux:9"
    with:
      base_image: ${{ matrix.base_image }}
      arch: ${{ matrix.arch }}
      variant: ${{ matrix.variant }}
      model: ${{ matrix.model }}
      kubernetes_version: ${{ matrix.kubernetes_version }}
