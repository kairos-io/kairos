name: Release AMD64 artifacts

on:
  push:
    tags:
      - v*
permissions: read-all
jobs:
  build-core:
    uses: kairos-io/kairos-factory-action/.github/workflows/reusable-factory.yaml@50727b6b5d97cf8f77e218eaf82b9362c24b3fd8 # v0.0.7
    permissions:
      id-token: write  # OIDC support
      contents: write
      security-events: write
      actions: read
    strategy:
      fail-fast: false
      matrix:
        base_image:
          - "opensuse/leap:15.6"
          - "opensuse/tumbleweed:latest"
          - "ubuntu:20.04"
          - "ubuntu:22.04"
          - "ubuntu:24.04"
          - "ubuntu:24.10"
          - "alpine:3.21"
          - "fedora:40"
          - "debian:12"
          - "rockylinux:9"
    secrets:
      registry_username: ${{ secrets.QUAY_USERNAME }}
      registry_password: ${{ secrets.QUAY_PASSWORD }}
    with:
      base_image: ${{ matrix.base_image }}
      arch: "amd64"
      model: "generic"
      version: "auto"
      registry_domain: "quay.io"
      registry_namespace: "kairos"
      iso: true
      grype: true
      grype_sarif: true
      trivy: true
      trivy_sarif: true
      list_release_artifacts: true
      cosign: true
      release: true
  build-uki-container-image:
    uses: kairos-io/kairos-factory-action/.github/workflows/reusable-factory.yaml@50727b6b5d97cf8f77e218eaf82b9362c24b3fd8 # v0.0.7
    permissions:
      id-token: write  # OIDC support
      contents: write
      security-events: write
      actions: read
    strategy:
      matrix:
        base_image:
          - "ubuntu:24.04"
          - "fedora:40"
        include:
          - base_image: "ubuntu:24.04"
            variant: "standard"  # let it use the latest k3s version released for now
            arch: "amd64"
            model: "generic"
    secrets:
      registry_username: ${{ secrets.QUAY_USERNAME }}
      registry_password: ${{ secrets.QUAY_PASSWORD }}
    with:
      base_image: ${{ matrix.base_image }}
      arch: "amd64"
      model: "generic"
      version: "auto"
      trusted_boot: true
      grype: true
      grype_sarif: true
      trivy: true
      trivy_sarif: true
      cosign: true
  get-k3s-versions:
    runs-on: ubuntu-latest
    outputs:
      kubernetes_versions: ${{ steps.get-k3s-releases.outputs.kubernetes_versions }}
    steps:
      - run: |
          sudo apt update && sudo apt install -y jq curl
      - name: Get latest k3s releases
        id: get-k3s-releases
        run: |
          kubernetes_versions=$(curl -s https://api.github.com/repos/k3s-io/k3s/releases | jq -r '
            [.[] | select(.prerelease == false and .draft == false and (.tag_name | test("rc") | not)) | .tag_name]
            | map(select(test("^v[0-9]+\\.[0-9]+\\.[0-9]+\\+k3s[0-9]+$")))
            | map({
               version: .,
               minor: (split(".")[1:2]|join("")),
               patch: (split(".")[2:3]|join("")|split("+")[0]),
               revision: (split("+k3s")[1])
             })
           | group_by(.minor)
           | map(sort_by([(.patch | tonumber), (.revision | tonumber)]) | reverse | .[0])
           | sort_by(.minor | tonumber)
           | reverse
           | .[0:3]
           | map(.version)
          ' | jq -c '.')
          echo "kubernetes_versions=$kubernetes_versions" >> $GITHUB_OUTPUT

  get-k0s-versions:
    runs-on: ubuntu-latest
    outputs:
      kubernetes_versions: ${{ steps.get-k0s-releases.outputs.kubernetes_versions }}
    steps:
      - run: |
          sudo apt update && sudo apt install -y jq curl
      - name: Get latest k0s releases
        id: get-k0s-releases
        run: |
          kubernetes_versions=$(curl -s https://api.github.com/repos/k0sproject/k0s/releases | jq -r '
           [.[] | select(.prerelease == false and .draft == false and (.tag_name | test("rc") | not)) | .tag_name]
           | map(select(test("^v[0-9]+\\.[0-9]+\\.[0-9]+\\+k0s\\.[0-9]+$")))
           | map({
             version: .,
             minor: (split(".")[1:2]|join("")),
             patch: (split(".")[2:3]|join("")|split("+")[0]),
             revision: (split("+k0s.")[1])
           })
           | group_by(.minor)
           | map(sort_by([(.patch | tonumber), (.revision | tonumber)]) | reverse | .[0])
           | sort_by(.minor | tonumber)
           | reverse
           | .[0:3]
           | map(.version)
           '| jq -c '.')
          echo "kubernetes_versions=$kubernetes_versions" >> $GITHUB_OUTPUT

  build-standard-k3s:
    uses: kairos-io/kairos-factory-action/.github/workflows/reusable-factory.yaml@50727b6b5d97cf8f77e218eaf82b9362c24b3fd8 # v0.0.7
    needs:
      - get-k3s-versions
    permissions:
      id-token: write  # OIDC support
      contents: write
      security-events: write
      actions: read
    strategy:
      fail-fast: false
      matrix:
        kubernetes_version: ${{ fromJson(needs.get-k3s-versions.outputs.kubernetes_versions) }}
        base_image:
          - "opensuse/leap:15.6"
          - "opensuse/tumbleweed:latest"
          - "ubuntu:20.04"
          - "ubuntu:22.04"
          - "ubuntu:24.04"
          - "ubuntu:24.10"
          - "alpine:3.21"
          - "fedora:40"
          - "debian:12"
          - "rockylinux:9"
    secrets:
      registry_username: ${{ secrets.QUAY_USERNAME }}
      registry_password: ${{ secrets.QUAY_PASSWORD }}
    with:
      base_image: ${{ matrix.base_image }}
      arch: "amd64"
      model: "generic"
      version: "auto"
      registry_domain: "quay.io"
      registry_namespace: "kairos"
      iso: true
      kubernetes_version: ${{ matrix.kubernetes_version }}
      kubernetes_distro: "k3s"
      grype: true
      grype_sarif: true
      trivy: true
      trivy_sarif: true
      list_release_artifacts: true
      cosign: true
      release: true
  build-standard-k0s:
    uses: kairos-io/kairos-factory-action/.github/workflows/reusable-factory.yaml@50727b6b5d97cf8f77e218eaf82b9362c24b3fd8 # v0.0.7
    needs:
      - get-k0s-versions
    permissions:
      id-token: write  # OIDC support
      contents: write
      security-events: write
      actions: read
    strategy:
      fail-fast: false
      matrix:
        kubernetes_version: ${{ fromJson(needs.get-k0s-versions.outputs.kubernetes_versions) }}
        base_image:
          - "opensuse/leap:15.6"
          - "ubuntu:24.10"
          - "rockylinux:9"
    secrets:
      registry_username: ${{ secrets.QUAY_USERNAME }}
      registry_password: ${{ secrets.QUAY_PASSWORD }}
    with:
      base_image: ${{ matrix.base_image }}
      arch: "amd64"
      model: "generic"
      version: "auto"
      registry_domain: "quay.io"
      registry_namespace: "kairos"
      iso: true
      kubernetes_version: ${{ matrix.kubernetes_version }}
      kubernetes_distro: "k0s"
      grype: true
      grype_sarif: true
      trivy: true
      trivy_sarif: true
      list_release_artifacts: true
      cosign: true
      release: true
