name: Release

on:
  push:
    tags:
      - v*
jobs:
  get-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
    - uses: actions/checkout@v3
    - run: |
        git fetch --prune --unshallow
    - id: set-matrix
      run: |
          content=`cat ./.github/flavors.json`
          # the following lines are only required for multi line json
          content="${content//'%'/'%25'}"
          content="${content//$'\n'/'%0A'}"
          content="${content//$'\r'/'%0D'}"
          # end of optional handling for multi line json
          echo "::set-output name=matrix::{\"include\": $content }"

  build-framework:
    runs-on: ubuntu-latest
    needs:
    - get-matrix
    permissions:
      id-token: write  # OIDC support
      contents: write
    strategy:
      fail-fast: false
      matrix: ${{fromJson(needs.get-matrix.outputs.matrix)}}
    steps:
      - uses: actions/checkout@v3
      - run: |
          git fetch --prune --unshallow
      - name: setup-docker
        uses: docker-practice/actions-setup-docker@master
      - name: Install Cosign
        uses: sigstore/cosign-installer@main
      - uses: earthly/actions/setup-earthly@v1
        with:
          version: v0.7.0
      - name: Login to Quay Registry
        run: echo ${{ secrets.QUAY_PASSWORD }} | docker login -u ${{ secrets.QUAY_USERNAME }} --password-stdin quay.io
      - name: Build  ðŸ”§
        env:
          FLAVOR: ${{ matrix.flavor }}
          IMAGE: quay.io/kairos/framework
        run: |
          export TAG=${GITHUB_REF##*/}
          earthly --ci --push +build-framework-image --FLAVOR=${FLAVOR}
      - name: Push to quay
        if: startsWith(github.ref, 'refs/tags/')
        env:
          COSIGN_EXPERIMENTAL: 1
          IMAGE: quay.io/kairos/framework
        run: |
          export TAG=${GITHUB_REF##*/}
          cosign sign ${IMAGE}:$TAG_${{ matrix.flavor }}

  build:
    runs-on: ubuntu-latest
    needs:
    - get-matrix
    permissions:
      id-token: write  # OIDC support
      contents: write
    strategy:
      fail-fast: false
      matrix: ${{fromJson(needs.get-matrix.outputs.matrix)}}
    steps:
      - uses: actions/checkout@v3
      - run: |
          git fetch --prune --unshallow
      - name: setup-docker
        uses: docker-practice/actions-setup-docker@master
      - name: Install Cosign
        uses: sigstore/cosign-installer@main
      - name: Release space from worker
        run: |
          sudo rm -rf /usr/local/lib/android # will release about 10 GB if you don't need Android
          sudo rm -rf /usr/share/dotnet # will release about 20GB if you don't need .NET
      - name: Login to Quay Registry
        run: echo ${{ secrets.QUAY_PASSWORD }} | docker login -u ${{ secrets.QUAY_USERNAME }} --password-stdin quay.io
      - name: Build  ðŸ”§
        if: startsWith(github.ref, 'refs/tags/')
        env:
          FLAVOR: ${{ matrix.flavor }}
        run: |
          export TAG=${GITHUB_REF##*/}
          ./earthly.sh +all --IMAGE=quay.io/kairos/core-$FLAVOR:$TAG --FLAVOR=$FLAVOR --ISO_NAME=kairos-$FLAVOR-$TAG
          sudo mv build release
      - name: Push to quay
        if: startsWith(github.ref, 'refs/tags/')
        env:
          COSIGN_EXPERIMENTAL: 1
        run: |
          TAG=${GITHUB_REF##*/}
          docker push quay.io/kairos/core-${{ matrix.flavor }}:$TAG
          cosign sign quay.io/kairos/core-${{ matrix.flavor }}:$TAG
      - name: Sign ISO sha files
        if: startsWith(github.ref, 'refs/tags/')
        env:
          COSIGN_EXPERIMENTAL: 1
        run: |
          export TAG=${GITHUB_REF##*/}
          sudo chmod -R 777 release
          cosign sign-blob --yes --output-certificate=release/kairos-${{Â matrix.flavorÂ }}-$TAG.iso.sha256.pem \
                          --output-signature=release/kairos-${{Â matrix.flavorÂ }}-$TAG.iso.sha256.sig \
                          release/kairos-${{Â matrix.flavorÂ }}-$TAG.iso.sha256
      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            release/*
      - run: |
          sudo mv release/*.iso ./
          sudo mv release/*.sha256 ./
          sudo mv release/*.sha256.pem ./
          sudo mv release/*.sha256.sig ./
      - uses: actions/upload-artifact@v3
        with:
          name: kairos-${{ matrix.flavor }}.iso.zip
          path: |
            *.iso
            *.sha256
            *.sha256.pem
            *.sha256.sig
          if-no-files-found: error


# build-vm-images:
#   needs: build
#   runs-on: macos-12
#   strategy:
#     fail-fast: false
#     matrix:
#      include:
#        - flavor: "opensuse"
#        - flavor: "alpine"
#   steps:
#     - uses: actions/checkout@v2
#     - name: Install deps
#       run: |
#         brew install hudochenkov/sshpass/sshpass
#         brew install qemu
#     - name: Download artifacts
#       uses: actions/download-artifact@v2
#       with:
#         name: kairos-${{ matrix.flavor }}.iso.zip
#     - run: |
#             ls -liah
#             iso=$(ls *.iso)
#             bash scripts/build_vm.sh $iso
#     - uses: actions/upload-artifact@v2
#       with:
#         name: kairos-${{ matrix.flavor }}.qcow2.tar.xz
#         path: |
#           *.qcow2.tar.xz
#     - uses: actions/upload-artifact@v2
#       with:
#         name: kairos-${{ matrix.flavor }}.ova
#         path: |
#           *.ova
#         if-no-files-found: error

# release-images:
#   runs-on: ubuntu-latest
#   permissions:
#     contents: write
#   needs: build-vm-images
#   strategy:
#     fail-fast: false
#     matrix:
#      include:
#        - flavor: "opensuse"
#        - flavor: "alpine"
#   steps:
#     - name: Download artifacts
#       uses: actions/download-artifact@v2
#       with:
#         name: kairos-${{ matrix.flavor }}.qcow2.tar.xz
#     - name: Download artifacts
#       uses: actions/download-artifact@v2
#       with:
#         name: kairos-${{ matrix.flavor }}.ova
#     - run: |
#             mkdir release
#             mv *.qcow2.tar.xz release/
#             mv *.ova release/
#     - uses: web3-storage/add-to-web3@v2
#       id: web3
#       with:
#         web3_token: ${{ secrets.WEB3_STORAGE_TOKEN }}
#         path_to_add: 'release'
#     - run: |
#         mkdir dist
#         echo ${{ steps.web3.outputs.url }} > dist/kairos-${{ matrix.flavor }}.qcow2.url.txt
#     - name: Release
#       uses: softprops/action-gh-release@v1
#       if: startsWith(github.ref, 'refs/tags/')
#       with:
#         files: |
#           dist/*
