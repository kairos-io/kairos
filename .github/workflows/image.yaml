name: Build image

on: 
 push:
   branches:
     - master
 pull_request:

concurrency:
  group: ci-image-${{ github.head_ref || github.ref }}-${{ github.repository }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      id-token: write  # OIDC support
    strategy:
      fail-fast: false
      matrix:
       include:
         - flavor: "opensuse"
         #- flavor: "tumbleweed"
         #- flavor: "fedora"
         - flavor: "ubuntu"
         - flavor: "alpine"
    steps:
      - uses: actions/checkout@v2
      - run: |
          git fetch --prune --unshallow
      - name: setup-docker
        uses: docker-practice/actions-setup-docker@master
      - name: Release space from worker
        run: |
          sudo rm -rf /usr/local/lib/android # will release about 10 GB if you don't need Android
          sudo rm -rf /usr/share/dotnet # will release about 20GB if you don't need .NET
      - name: Install Cosign
        uses: sigstore/cosign-installer@main
      - name: Login to Quay Registry
        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/master' }}
        run: echo ${{ secrets.QUAY_PASSWORD }} | docker login -u ${{ secrets.QUAY_USERNAME }} --password-stdin quay.io
      - name: Build  ðŸ”§
        env:
          FLAVOR: ${{ matrix.flavor }}
          IMAGE: quay.io/c3os/core-${{ matrix.flavor }}:latest
        run: |
          ./earthly.sh +all --IMAGE=$IMAGE --FLAVOR=$FLAVOR
          sudo mv build/* .
          sudo rm -rf build
      - uses: actions/upload-artifact@v2
        with:
          name: c3os-${{ matrix.flavor }}.iso.zip
          path: |
            *.iso
            *.sha256
          if-no-files-found: error
      - uses: actions/upload-artifact@v2
        with:
          name: c3os-${{ matrix.flavor }}.initrd.zip
          path: |
            *-initrd
          if-no-files-found: error
      - uses: actions/upload-artifact@v2
        with:
          name: c3os-${{ matrix.flavor }}.squashfs.zip
          path: |
            *.squashfs
          if-no-files-found: error
      - uses: actions/upload-artifact@v2
        with:
          name: c3os-${{ matrix.flavor }}.kernel.zip
          path: |
            *-kernel
            *-initrd
          if-no-files-found: error
      - uses: actions/upload-artifact@v2
        with:
          name: c3os-${{ matrix.flavor }}.ipxe.zip
          path: |
            *.ipxe
          if-no-files-found: error
      - name: Push to quay
        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/master' }}
        env:
          COSIGN_EXPERIMENTAL: 1
        run: | 
          docker push quay.io/c3os/core-${{ matrix.flavor }}:latest
          cosign sign quay.io/c3os/core-${{ matrix.flavor }}:latest
      - name: Push to testing
        run: | 
          docker tag quay.io/c3os/core-${{ matrix.flavor }}:latest ttl.sh/c3os-${{ matrix.flavor }}-${{ github.sha }}:8h
          docker push ttl.sh/c3os-${{ matrix.flavor }}-${{ github.sha }}:8h
# Test start
  build-vm-images:
    needs: 
    - build
    runs-on: macos-12
    strategy:
      fail-fast: false
      matrix:
       include:
         - flavor: "opensuse"
         - flavor: "alpine"
         - flavor: "ubuntu"
        # - flavor: "tumbleweed"
#         - flavor: "fedora"
    steps:
      - uses: actions/checkout@v2
      - name: Install deps
        run: |
          brew install hudochenkov/sshpass/sshpass
          brew install qemu
      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          name: c3os-${{ matrix.flavor }}.iso.zip
      - run: |
              ls -liah
              iso=$(ls *.iso)
              bash scripts/build_vm.sh $iso
      - uses: actions/upload-artifact@v2
        with:
          name: c3os-${{ matrix.flavor }}.qcow2.tar.xz
          path: |
            *.qcow2.tar.xz
      - uses: actions/upload-artifact@v2
        with:
          name: c3os-${{ matrix.flavor }}.ova
          path: |
            *.ova
          if-no-files-found: error
  # prepare-test:
  #   needs: build
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - run: |
  #         git fetch --prune --unshallow
  #     - name: Install Go
  #       uses: actions/setup-go@v2
  #       with:
  #           go-version: '^1.16'
  #     - name: Prepare config
  #       run: |
  #             ./earthly.sh +build-c3os-cli
  #             ./build/c3os create-config > config.yaml
  #             cat tests/assets/config.yaml >> config.yaml
  #     - name: Enable dns
  #       uses: mikefarah/yq@master
  #       with:
  #         cmd: yq -i '.c3os.dns = true' 'config.yaml'
  #     - name: Show config
  #       run: |
  #             cat config.yaml
  #     - uses: actions/upload-artifact@v2
  #       with:
  #         name: config.yaml
  #         path: |
  #            config.yaml
  #         if-no-files-found: error

  install-test:
    needs: 
    - build
    runs-on: macos-12
    strategy:
      fail-fast: true
      matrix:
       include:
         - flavor: "opensuse"
           node: "A" # Arbitrary field
         #- flavor: "alpine"
         #  node: "B" # Arbitrary field
         #- flavor: "tumbleweed"
         #  node: "C"
    steps:
      - uses: actions/checkout@v2
      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          name: c3os-${{ matrix.flavor }}.iso.zip
      - name: Install deps
        run: |
          brew install cdrtools jq
      - name: Install Go
        uses: actions/setup-go@v2
        with:
            go-version: '^1.16'
      - run: |
              ls -liah
              export ISO=$PWD/$(ls *.iso)
              export GOPATH="/Users/runner/go"
              export PATH=$PATH:$GOPATH/bin
              export CLOUD_INIT=$PWD/config.yaml 
              export CREATE_VM=true 
              export FLAVOR=${{ matrix.flavor }}
              ./.github/run_test.sh "install-test"
      - uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: ${{ matrix.flavor }}-vbox.logs.zip
          path: tests/**/logs/*
          if-no-files-found: warn

#   upgrade-single-node-k8s-test:
#     needs: 
#     - prepare-test
#     - upgrade-test
#     - upgrade-latest-with-cli-test
#     runs-on: macos-12
#     strategy:
#       fail-fast: true
#       matrix:
#        include:
#          - flavor: "opensuse"
#            node: "A" # Arbitrary field
#          - flavor: "alpine"
#            node: "B" # Arbitrary field
#          #- flavor: "tumbleweed"
#          #  node: "C"
#     steps:
#       - uses: actions/checkout@v2
#       - name: Download artifacts
#         uses: actions/download-artifact@v2
#         with:
#           name: c3os-${{ matrix.flavor }}.iso.zip
#       - name: Download artifacts
#         uses: actions/download-artifact@v2
#         with:
#           name: config.yaml
#       - name: Install deps
#         run: |
#           brew install cdrtools jq
#       - name: Install Go
#         uses: actions/setup-go@v2
#         with:
#             go-version: '^1.16'
#       - run: |
#               ls -liah
#               export ISO=$PWD/$(ls *.iso)
#               export GOPATH="/Users/runner/go"
#               export PATH=$PATH:$GOPATH/bin
#               export CLOUD_INIT=$PWD/config.yaml 
#               export CREATE_VM=true 
#               export FLAVOR=${{ matrix.flavor }}
#               ./.github/run_test.sh "upgrade-k8s"
#       - uses: actions/upload-artifact@v2
#         if: failure()
#         with:
#           name: ${{ matrix.flavor }}-vbox.logs.zip
#           path: tests/**/logs/*
#           if-no-files-found: warn

#   decentralized-k8s-test-opensuse:
#     needs: 
#     - prepare-test
#     - upgrade-single-node-k8s-test
#     - upgrade-test
#     - upgrade-latest-with-cli-test
#     runs-on: macos-12
#     strategy:
#       fail-fast: true
#       matrix:
#        include:
#          - flavor: "opensuse"
#            node: "A" # Arbitrary field
#          - flavor: "opensuse"
#            node: "B"
# #         - flavor: "alpine"
# #           node: "C"
#     steps:
#       - uses: actions/checkout@v2
#       - name: Download artifacts
#         uses: actions/download-artifact@v2
#         with:
#           name: c3os-${{ matrix.flavor }}.iso.zip
#       - name: Download artifacts
#         uses: actions/download-artifact@v2
#         with:
#           name: config.yaml
#       - name: Install deps
#         run: |
#           brew install cdrtools jq
#       - name: Install Go
#         uses: actions/setup-go@v2
#         with:
#             go-version: '^1.16'
#       - run: |
#               ls -liah
#               export ISO=$PWD/$(ls *.iso)
#               export GOPATH="/Users/runner/go"
#               export PATH=$PATH:$GOPATH/bin
#               export CLOUD_INIT=$PWD/config.yaml
#               export CREATE_VM=true
#               export FLAVOR=${{ matrix.flavor }}
#               ./.github/run_test.sh "decentralized-k8s"
#       - uses: actions/upload-artifact@v2
#         if: failure()
#         with:
#           name: ${{ matrix.flavor }}-vbox.logs.zip
#           path: tests/**/logs/*
#           if-no-files-found: warn

#   prepare-alpine-test:
#     needs: build
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v2
#       - run: |
#           git fetch --prune --unshallow
#       - name: Install Go
#         uses: actions/setup-go@v2
#         with:
#             go-version: '^1.16'
#       - name: Prepare config
#         run: |
#               ./earthly.sh +build-c3os-cli
#               ./build/c3os create-config > config.yaml
#               cat tests/assets/config.yaml >> config.yaml
#       - name: Enable dns
#         uses: mikefarah/yq@master
#         with:
#           cmd: yq -i '.c3os.dns = true' 'config.yaml'
#       - name: Show config
#         run: |
#               cat config.yaml
#       - uses: actions/upload-artifact@v2
#         with:
#           name: config.yaml
#           path: |
#              config.yaml
#           if-no-files-found: error

#   decentralized-k8s-test-alpine:
#     needs: 
#     - prepare-alpine-test
#     - decentralized-k8s-test-opensuse
#     - upgrade-test
#     - upgrade-latest-with-cli-test
#     runs-on: macos-12
#     strategy:
#       fail-fast: true
#       matrix:
#        include:
#          - flavor: "alpine"
#            node: "A" # Arbitrary field
#          - flavor: "alpine"
#            node: "B"
# #         - flavor: "alpine"
# #           node: "C"
#     steps:
#       - uses: actions/checkout@v2
#       - name: Download artifacts
#         uses: actions/download-artifact@v2
#         with:
#           name: c3os-${{ matrix.flavor }}.iso.zip
#       - name: Download artifacts
#         uses: actions/download-artifact@v2
#         with:
#           name: config.yaml
#       - name: Install deps
#         run: |
#           brew install cdrtools jq
#       - name: Install Go
#         uses: actions/setup-go@v2
#         with:
#             go-version: '^1.16'
#       - run: |
#               ls -liah
#               export ISO=$PWD/$(ls *.iso)
#               export GOPATH="/Users/runner/go"
#               export PATH=$PATH:$GOPATH/bin
#               export CLOUD_INIT=$PWD/config.yaml
#               export CREATE_VM=true
#               export FLAVOR=${{ matrix.flavor }}
#               ./.github/run_test.sh "decentralized-k8s"
#       - uses: actions/upload-artifact@v2
#         if: failure()
#         with:
#           name: ${{ matrix.flavor }}-vbox.logs.zip
#           path: tests/**/logs/*
#           if-no-files-found: warn

  latest-release:
    runs-on: ubuntu-latest
    steps:
    - uses: robinraju/release-downloader@v1.3
      with:     
      # A flag to set the download target as latest release
      # The default value is 'false'
        latest: true
        repository: "c3os-io/c3os"
        fileName: "*"
        out-file-path: "last-release"
    - uses: actions/upload-artifact@v2
      with:
          name: latest-release.zip
          path: last-release
          if-no-files-found: error

  qemu-autoinstall-tests:
    needs: 
    - build
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
       include:
         - flavor: "alpine"
         - flavor: "opensuse"
         - flavor: "ubuntu"
    steps:
    - uses: actions/checkout@v2
    - name: Download artifacts
      uses: actions/download-artifact@v2
      with:
          name: c3os-${{ matrix.flavor }}.iso.zip
    - run: |
            ls -liah
            export ISO=$PWD/$(ls *.iso)
            mkdir build
            mv $ISO build/c3os.iso
            ./earthly.sh +datasource-iso --CLOUD_CONFIG=tests/assets/autoinstall.yaml
            ./earthly.sh +run-qemu-tests --FLAVOR=${{ matrix.flavor }} --FROM_ARTIFACTS=true

#   qrcode-test-cli:
#     needs: 
#     - build
#     - prepare-alpine-test
#     - upgrade-test

#     runs-on: ubuntu-latest
#     steps:
#     - uses: actions/checkout@v2
#     - name: Download artifacts
#       uses: actions/download-artifact@v2
#       with:      
#           name: config.yaml
#     - name: Install Go
#       uses: actions/setup-go@v2
#       with:
#           go-version: '^1.16'
#     - run: |
#              ./earthly.sh +build-c3os-cli
#              sudo cp -rfv build/c3os /usr/bin/c3os
#              export CLOUD_INIT=$PWD/tests/assets/qrcode.yaml
#              export FLAVOR=${{ matrix.flavor }} 
#              ./.github/run_test.sh "qrcode-register"
#       env:
#        SENDKEY: 4kgpo43kphopj
#     - uses: actions/upload-artifact@v2
#       if: failure()
#       with:
#         name: screenshot.zip
#         path: |
#           tests/*.png
#   qrcode-test:
#     needs: 
#     - build
#     - upgrade-test
#     - prepare-alpine-test
#     runs-on: macos-12
#     strategy:
#       fail-fast: false
#       matrix:
#        include:
#          - flavor: "alpine"
#            node: "A" # Arbitrary field
# #         - flavor: "alpine"
# #           node: "C"
#     steps:
#     - uses: actions/checkout@v2
#     - name: Download artifacts
#       uses: actions/download-artifact@v2
#       with:      
#           name: config.yaml
#     - name: Download artifacts
#       uses: actions/download-artifact@v2
#       with:
#           name: c3os-${{ matrix.flavor }}.iso.zip
#     - name: Install deps
#       run: |
#         brew install cdrtools jq
#     - name: Install Go
#       uses: actions/setup-go@v2
#       with:
#           go-version: '^1.16'
#     - run: |
#             ls -liah
#             export ISO=$PWD/$(ls *.iso)
#             export GOPATH="/Users/runner/go"
#             export PATH=$PATH:$GOPATH/bin
#             export CLOUD_INIT=$PWD/tests/assets/qrcode.yaml
#             export CREATE_VM=true
#             export FLAVOR=${{ matrix.flavor }} 
#             ./.github/run_test.sh "qrcode-install"
#       env:
#        SENDKEY: 4kgpo43kphopj
#     - uses: actions/upload-artifact@v2
#       if: failure()
#       with:
#         name: ${{ matrix.flavor }}-qrcode-test.logs.zip
#         path: tests/**/logs/*
#         if-no-files-found: warn

  upgrade-latest-with-cli-test:
    needs: 
    - build
    - latest-release
    runs-on: macos-12
    strategy:
      fail-fast: false
      matrix:
       include:
         - flavor: "alpine"
           node: "A" # Arbitrary field
         - flavor: "opensuse"
           node: "B"
#         - flavor: "alpine"
#           node: "C"
    steps:
    - uses: actions/checkout@v2
    - name: Download artifacts
      uses: actions/download-artifact@v2
      with:
        name: latest-release.zip
    - name: Install deps
      run: |
        brew install cdrtools jq
    - name: Install Go
      uses: actions/setup-go@v2
      with:
          go-version: '^1.16'
    - run: |
            ls -liah
            export ISO=$PWD/$(ls c3os-${{ matrix.flavor }}-*.iso)
            export GOPATH="/Users/runner/go"
            export CONTAINER_IMAGE=ttl.sh/c3os-${{ matrix.flavor }}-${{ github.sha }}:8h
            export PATH=$PATH:$GOPATH/bin
            export CLOUD_INIT=$PWD/tests/assets/config.yaml
            export CREATE_VM=true
            export FLAVOR=${{ matrix.flavor }} 
            ./.github/run_test.sh "upgrade-latest-with-cli"
    - uses: actions/upload-artifact@v2
      if: failure()
      with:
        name: ${{ matrix.flavor }}-upgrade-test.logs.zip
        path: tests/**/logs/*
        if-no-files-found: warn



#   upgrade-test:
#     needs: 
#     - build
#     - latest-release
#     runs-on: macos-12
#     strategy:
#       fail-fast: false
#       matrix:
#        include:
#          - flavor: "alpine"
#            node: "A" # Arbitrary field
#          - flavor: "opensuse"
#            node: "B"
# #         - flavor: "alpine"
# #           node: "C"
#     steps:
#     - uses: actions/checkout@v2
#     - name: Download artifacts
#       uses: actions/download-artifact@v2
#       with:
#         name: latest-release.zip
#     - name: Install deps
#       run: |
#         brew install cdrtools jq
#     - name: Install Go
#       uses: actions/setup-go@v2
#       with:
#           go-version: '^1.16'
#     - run: |
#             ls -liah
#             export ISO=$PWD/$(ls c3os-${{ matrix.flavor }}-*.iso)
#             export GOPATH="/Users/runner/go"
#             export CONTAINER_IMAGE=ttl.sh/c3os-${{ matrix.flavor }}-${{ github.sha }}:8h
#             export PATH=$PATH:$GOPATH/bin
#             export CLOUD_INIT=$PWD/tests/assets/config.yaml
#             export CREATE_VM=true
#             export FLAVOR=${{ matrix.flavor }}
#             ./.github/run_test.sh "upgrade-latest-with-kubernetes"
#     - uses: actions/upload-artifact@v2
#       if: failure()
#       with:
#         name: ${{ matrix.flavor }}-upgrade-test.logs.zip
#         path: tests/**/logs/*
#         if-no-files-found: warn
  # test-tumbleweed:
  #   needs: 
  #   - prepare-test
  #   - test
  #   runs-on: macos-12
  #   strategy:
  #     fail-fast: true
  #     matrix:
  #      include:
  #        - flavor: "tumbleweed"
  #          node: "A" # Arbitrary field
  #        - flavor: "tumbleweed"
  #          node: "B"
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Download artifacts
  #       uses: actions/download-artifact@v2
  #       with:
  #         name: c3os-${{ matrix.flavor }}.iso.zip
  #     - name: Download artifacts
  #       uses: actions/download-artifact@v2
  #       with:
  #         name: config.yaml
  #     - name: Install deps
  #       run: |
  #         brew install cdrtools jq
  #     - name: Install Go
  #       uses: actions/setup-go@v2
  #       with:
  #           go-version: '^1.16'
  #     - run: |
  #             ls -liah
  #             export ISO=$PWD/$(ls *.iso)
  #             export GOPATH="/Users/runner/go"
  #             PATH=$PATH:$GOPATH/bin
  #             go get github.com/onsi/ginkgo/v2
  #             go get github.com/onsi/gomega/...
  #             go get github.com/onsi/ginkgo/v2/ginkgo/internal@v2.1.3
  #             go install github.com/onsi/ginkgo/v2/ginkgo
  #             CLOUD_INIT=$PWD/config.yaml CREATE_VM=true FLAVOR=${{ matrix.flavor }} ginkgo --label-filter smoke --fail-fast -r ./tests/
  #     - uses: actions/upload-artifact@v2
  #       if: failure()
  #       with:
  #         name: ${{ matrix.flavor }}-vbox.logs.zip
  #         path: tests/**/logs/*
  #         if-no-files-found: warn
