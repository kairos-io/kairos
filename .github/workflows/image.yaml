name: Build image
on:
  push:
    branches:
      - master
  pull_request: null
  workflow_dispatch:
    inputs:
      immucore_dev:
        description: 'Build workflow with immucore from a given branch'
        required: false
        type: choice
        options:
          - true
          - false
        default: 'false'
      immucore_dev_branch:
        description: 'Branch to build immucore from'
        required: false
        type: string
        default: 'master'

concurrency:
  group: ci-image-${{ github.head_ref || github.ref }}-${{ github.repository }}
  cancel-in-progress: true
env:
  EARTHLY_BUILD_ARGS: 'IMMUCORE_DEV=true,IMMUCORE_DEV_BRANCH=stages_cd'
jobs:
  get-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v3
      - run: |
          git fetch --prune --unshallow
      - id: set-matrix
        run: |
          content=`cat ./.github/flavors.json`
          # the following lines are only required for multi line json
          # the following lines are only required for multi line json
          content="${content//'%'/'%25'}"
          content="${content//$'\n'/'%0A'}"
          content="${content//$'\r'/'%0D'}"
          # end of optional handling for multi line json
          # end of optional handling for multi line json
          echo "::set-output name=matrix::{\"include\": $content }"
  build:
    runs-on: ubuntu-latest
    needs:
      - get-matrix
    permissions:
      id-token: write  # OIDC support
      contents: write
      actions: read
      security-events: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - flavor: "ubuntu-22-lts"
    steps:
      - uses: actions/checkout@v3
      - run: |
          git fetch --prune --unshallow
      - name: setup-docker
        uses: docker-practice/actions-setup-docker@master
      - name: Release space from worker
        run: |
          sudo rm -rf /usr/local/lib/android # will release about 10 GB if you don't need Android
          sudo rm -rf /usr/share/dotnet # will release about 20GB if you don't need .NET
      - name: Install Cosign
        uses: sigstore/cosign-installer@main
      - name: Login to Quay Registry
        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/master' }}
        run: echo ${{ secrets.QUAY_PASSWORD }} | docker login -u ${{ secrets.QUAY_USERNAME }} --password-stdin quay.io
      - name: Build  ðŸ”§
        env:
          FLAVOR: ${{ matrix.flavor }}
          IMAGE: quay.io/kairos/core-${{ matrix.flavor }}:latest
        run: |
          ./earthly.sh +all --IMAGE=$IMAGE --FLAVOR=$FLAVOR
          sudo mv build/* .
          sudo rm -rf build
          mkdir sarif
          mv *.sarif sarif/
      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: 'sarif'
          category: ${{ matrix.flavor }}
      - uses: actions/upload-artifact@v3
        with:
          name: kairos-${{ matrix.flavor }}.iso.zip
          path: |
            *.iso
            *.sha256
          if-no-files-found: error
  qemu-acceptance-tests:
    needs:
      - build
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - flavor: "ubuntu-22-lts"
    steps:
    - uses: actions/checkout@v3
    - run: |
        git fetch --prune --unshallow
    - name: Download artifacts
      uses: actions/download-artifact@v3
      with:
        name: kairos-${{ matrix.flavor }}.iso.zip
    - name: Install deps
      run: |
        apt install -y qemu-system-x86 qemu-utils golang git
    - run: |
        ./earthly.sh +datasource-iso --CLOUD_CONFIG=tests/assets/autoinstall.yaml
        PREBUILT_ISO=$(ls *.iso) FLAVOR=${{ matrix.flavor }} USE_QEMU=true CREATE_VM=true CLOUD_CONFIG="./tests/assets/autoinstall.yaml" DATASOURCE=build/datasource.iso CLOUD_INIT="./tests/assets/autoinstall.yaml" ginkgo -v --label-filter "autoinstall-test" --fail-fast -r ./tests/
    - name: Upload logs
      uses: actions/upload-artifact@v3
      if: failure()
      with:
        name: ${{ matrix.flavor }}-acceptance.logs.zip
        path: tests/**/logs/*
        if-no-files-found: warn
    - name: Upload logs
      uses: actions/upload-artifact@v3
      if: failure()
      with:
        name: ${{ matrix.flavor }}-acceptance2.logs.zip
        path: tests/logs/*
        if-no-files-found: warn