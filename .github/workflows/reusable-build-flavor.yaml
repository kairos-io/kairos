name: Reusable workflow that builds a specific Kairos flavor

on:
  workflow_call:
    inputs:
      base_image:
        required: true
        type: string
      model:
        required: false
        type: string
        default: "generic"
      variant:
        required: false
        type: string
        default: "core"
      arch:
        required: false
        type: string
        default: "amd64"
      kubernetes_version:
        required: false
        type: string
      event_type:
        required: true
        type: string

permissions: read-all
jobs:
  build:
    runs-on: ${{ inputs.arch == 'arm64' && 'ubuntu-24.04-arm' || 'ubuntu-24.04' }}
    name: Build ${{ inputs.base_image }} - ${{ inputs.model }} - ${{ inputs.variant }} - ${{ inputs.arch }}
    permissions:
      id-token: write  # OIDC support
      contents: write
      actions: read
      security-events: write
    steps:
      - name: Split base image
        id: split
        run: |
          echo "flavor=$(echo ${{ inputs.base_image }} | cut -d ':' -f 1 | sed  's/\//-/g')" >> $GITHUB_OUTPUT
          echo "flavor_release=$(echo ${{ inputs.base_image }} | cut -d ':' -f 2)" >> $GITHUB_OUTPUT
      - run: |
          echo ${{ inputs.event_type }}
      - uses: actions/checkout@v4
      - run: |
          git fetch --prune --unshallow
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@master
      - name: Login to Quay Registry
        uses: docker/login-action@v3
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_PASSWORD }}
      - name: Set Image tag
        run: |
          echo "IMAGE_NAME=quay.io/kairos/ci-temp-images:${{ steps.split.outputs.flavor }}-${{ steps.split.outputs.flavor_release }}-${{ inputs.variant }}-${{ inputs.arch }}-${{ github.sha }}" >> $GITHUB_ENV
      - name: Build container ðŸ”§
        uses: docker/build-push-action@v6
        with:
          context: .
          file: images/Dockerfile
          platforms: linux/${{ inputs.arch }}
          load: true
          tags: ${{ env.IMAGE_NAME }}
          # https://docs.redhat.com/en/documentation/red_hat_quay/3.4/html/use_red_hat_quay/working_with_tags#tag-expiration
          labels: |
            quay.expires-after=6h
          build-args: |
            BASE_IMAGE=${{ inputs.base_image }}
            MODEL=${{ inputs.model }}
            VARIANT=${{ inputs.variant }}
            KUBERNETES_VERSION=${{ inputs.kubernetes_version }}
      - name: Build raw image
        if: ${{ inputs.model != 'rpi3' && inputs.model != 'generic' }}
        run: |
          docker run --rm --privileged -v /var/run/docker.sock:/var/run/docker.sock \
          -v $PWD/build/:/output \
          quay.io/kairos/auroraboot:latest \
          --debug \
          --set "disable_http_server=true" \
          --set "disable_netboot=true" \
          --set "container_image=${{ env.IMAGE_NAME }}" \
          --set "state_dir=/output" \
          --set "disk.raw=true"
      - name: Build iso ðŸ“¦
        if: ${{ inputs.model == 'generic' }}
        run: |
          mkdir build
          docker run --rm -v /var/run/docker.sock:/var/run/docker.sock \
          -v $PWD/build/:/output \
          quay.io/kairos/auroraboot:latest --debug build-iso --output /output/ \
          --name kairos-${{ steps.split.outputs.flavor }}-${{ steps.split.outputs.flavor_release }}-${{ inputs.variant }}-${{ inputs.arch }}-${{ github.sha }} \
          docker:${{ env.IMAGE_NAME }}
      - uses: actions/upload-artifact@v4
        if: ${{ inputs.model == 'generic' }}
        with:
          name: kairos-${{ steps.split.outputs.flavor }}-${{ steps.split.outputs.flavor_release }}-${{ inputs.variant }}.iso.zip
          path: |
            build/*.iso
            build/*.sha256
          if-no-files-found: error
      - name: Push to testing
        if: ${{ inputs.model == 'generic' }}
        run: |
          docker push ${{ env.IMAGE_NAME }}
