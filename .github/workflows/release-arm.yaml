name: Build arm images
on:
  push:
    tags:
      - '*'
jobs:
  get-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v3
      - run: |
          git fetch --prune --unshallow
      - id: set-matrix
        run: |
          content=`cat ./.github/flavors-arm.json`
          # the following lines are only required for multi line json
          # the following lines are only required for multi line json
          # the following lines are only required for multi line json
          # the following lines are only required for multi line json
          content="${content//'%'/'%25'}"
          content="${content//$'\n'/'%0A'}"
          content="${content//$'\r'/'%0D'}"
          # end of optional handling for multi line json
          # end of optional handling for multi line json
          # end of optional handling for multi line json
          # end of optional handling for multi line json
          echo "::set-output name=matrix::{\"include\": $content }"
  docker:
    runs-on: ubuntu-latest
    needs:
      - get-matrix
    permissions:
      id-token: write
      contents: write
    strategy:
      fail-fast: false
      matrix: ${{fromJson(needs.get-matrix.outputs.matrix)}}
    steps:
      - name: Release space from worker
        run: |
          sudo rm -rf /usr/local/lib/android # will release about 10 GB if you don't need Android
          sudo rm -rf /usr/share/dotnet # will release about 20GB if you don't need .NET
      - uses: actions/checkout@v3
      - run: |
          git fetch --prune --unshallow
      - name: Set up QEMU
        uses: docker/setup-qemu-action@master
        with:
          platforms: all
      - name: Install Cosign
        uses: sigstore/cosign-installer@main
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@master
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_PASSWORD }}
      - name: Build  ðŸ”§
        env:
          FLAVOR: ${{ matrix.flavor }}
          MODEL: ${{ matrix.model }}
        run: |
          export TAG=${GITHUB_REF##*/}
          ./earthly.sh +all-arm --IMAGE_NAME=kairos-$FLAVOR-$TAG.img --IMAGE=quay.io/kairos/core-$FLAVOR:$TAG --MODEL=$MODEL --FLAVOR=$FLAVOR
      - name: Push  ðŸ”§
        env:
          FLAVOR: ${{ matrix.flavor }}
        run: |
          export TAG=${GITHUB_REF##*/}
          docker push quay.io/kairos/core-$FLAVOR:$TAG
      - name: Sign image
        if: startsWith(github.ref, 'refs/tags/')
        env:
          COSIGN_EXPERIMENTAL: 1
        run: |
          TAG=${GITHUB_REF##*/}
          cosign sign quay.io/kairos/core-${{ matrix.flavor }}:$TAG
      - name: Export version
        run: |
          TAG=${GITHUB_REF##*/}
          echo "VERSION=$TAG" >> $GITHUB_ENV
      - name: Upload Image
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          curl https://luet.io/install.sh | sudo sh
          sudo tar cvf build.tar build
          sudo luet util pack quay.io/kairos/core-${{ matrix.flavor }}:$VERSION.img build.tar image.tar
          sudo -E docker load -i image.tar
          sudo -E docker push quay.io/kairos/core-${{ matrix.flavor }}:$VERSION.img
      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            build/*.json
