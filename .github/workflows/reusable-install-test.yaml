name: Reusable workflow - install test

on:
  workflow_call:
    inputs:
      flavor:
        required: true
        type: string
      flavor_release:
        required: true
        type: string
      secureboot:
        required: false
        type: boolean

jobs:
  test:
    runs-on: kvm
    steps:
      - uses: actions/checkout@v4
      - run: |
          git fetch --prune --unshallow
      - name: Download ISO
        id: iso
        uses: actions/download-artifact@v4.1.2
        with:
          name: kairos-${{ inputs.flavor }}-${{ inputs.flavor_release}}.iso.zip
      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version-file: tests/go.mod
          cache-dependency-path: tests/go.sum
      - name: Block all traffic to metadata ip  # For cloud runners, the metadata ip can interact with our test machines
        run: |
          sudo iptables -I INPUT -s 169.254.169.254 -j DROP
          sudo iptables -I OUTPUT -d 169.254.169.254 -j DROP
      - name: Enable KVM group perms
        run: |
          sudo apt-get update
          sudo apt-get install -y libvirt-clients libvirt-daemon-system libvirt-daemon virtinst bridge-utils qemu qemu-system-x86 qemu-system-x86 qemu-utils qemu-kvm acl udev

          # https://github.blog/changelog/2023-02-23-hardware-accelerated-android-virtualization-on-actions-windows-and-linux-larger-hosted-runners/
          # echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          # sudo udevadm control --reload-rules
          # sudo udevadm trigger --name-match=kvm
          # sudo usermod -a -G kvm,libvirt $USER
          #
          # TODO: Switch back to the above solution when we switch to the github runners
          # https://askubuntu.com/a/1081326
          sudo setfacl -m u:runner:rwx /dev/kvm
      - name: Tests
        env:
          USE_QEMU: true
          KVM: true
          MEMORY: 4000
          CPUS: 2
          DRIVE_SIZE: 30000
          CREATE_VM: true
          FLAVOR: ${{ inputs.flavor }}
        run: |
          if [ "${{ inputs.secureboot }}" = "true" ]; then
            export FIRMWARE=/usr/share/OVMF/OVMF_CODE.fd
          fi
          ls *.iso
          export ISO=$PWD/$(ls *.iso)
          echo "ISO is: $ISO"
          cp tests/go.* .
          go run github.com/onsi/ginkgo/v2/ginkgo -v --label-filter "install-test" --fail-fast -r ./tests
      - uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: ${{ inputs.flavor }}.logs.zip
          path: tests/**/logs/*
          if-no-files-found: warn
