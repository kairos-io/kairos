name: Reusable workflow - upgrade latest with cli test

on:
  workflow_call:
    inputs:
      flavor:
        required: true
        type: string
      flavor_release:
        required: true
        type: string
      label:
        required: true
        type: string

permissions: read-all
jobs:
  test:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -eo pipefail {0}
    steps:
      - name: Release space from worker
        run: |
          echo "Listing top largest packages"
          pkgs=$(dpkg-query -Wf '${Installed-Size}\t${Package}\t${Status}\n' | awk '$NF == "installed"{print $1 "\t" $2}' | sort -nr)
          head -n 30 <<< "${pkgs}"
          echo
          df -h
          echo
          sudo apt-get remove -y '^llvm-.*|^libllvm.*' || true
          sudo apt-get remove --auto-remove android-sdk-platform-tools || true
          sudo apt-get purge --auto-remove android-sdk-platform-tools || true
          sudo rm -rf /usr/local/lib/android
          sudo apt-get remove -y '^dotnet-.*|^aspnetcore-.*' || true
          sudo rm -rf /usr/share/dotnet
          sudo apt-get remove -y '^mono-.*' || true
          sudo apt-get remove -y '^ghc-.*' || true
          sudo apt-get remove -y '.*jdk.*|.*jre.*' || true
          sudo apt-get remove -y 'php.*' || true
          sudo apt-get remove -y hhvm || true
          sudo apt-get remove -y powershell || true
          sudo apt-get remove -y firefox || true
          sudo apt-get remove -y monodoc-manual || true
          sudo apt-get remove -y msbuild || true
          sudo apt-get remove -y microsoft-edge-stable || true
          sudo apt-get remove -y '^google-.*' || true
          sudo apt-get remove -y azure-cli || true
          sudo apt-get remove -y '^mongo.*-.*|^postgresql-.*|^mysql-.*|^mssql-.*' || true
          sudo apt-get remove -y '^gfortran-.*' || true
          sudo apt-get remove -y '^gcc-*' || true
          sudo apt-get remove -y '^g++-*' || true
          sudo apt-get remove -y '^cpp-*' || true
          sudo apt-get autoremove -y
          sudo apt-get clean
          echo
          echo "Listing top largest packages"
          pkgs=$(dpkg-query -Wf '${Installed-Size}\t${Package}\t${Status}\n' | awk '$NF == "installed"{print $1 "\t" $2}' | sort -nr)
          head -n 30 <<< "${pkgs}"
          echo
          sudo rm -rfv build || true
          df -h
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          fetch-depth: 0
      - name: Install Go
        uses: actions/setup-go@41dfa10bad2bb2ae585af6ee5bb4d7d973ad74ed # v5
        with:
          go-version-file: tests/go.mod
          cache-dependency-path: tests/go.sum
      - name: Deps
        run: |
          sudo apt update && \
          sudo apt install -y git qemu-system-x86 qemu-utils swtpm jq make glibc-tools \
          openssl curl gettext ca-certificates curl gnupg lsb-release

          curl -L  https://github.com/mudler/luet/releases/download/0.33.0/luet-0.33.0-linux-amd64 -o luet
          chmod +x luet
          sudo mv luet /usr/bin/luet
          sudo mkdir -p /etc/luet/repos.conf.d/
          sudo luet repo add -y kairos --url quay.io/kairos/packages --type docker
          LUET_NOLOCK=true sudo -E luet install -y container/kubectl utils/k3d utils/earthly
      - name: Download ISO
        id: iso
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8
        with:
          name: kairos-${{ inputs.flavor }}-${{ inputs.flavor_release }}.iso.zip
      - name: Display structure of downloaded files
        run: ls -las .
      - name: Block all traffic to metadata ip  # For cloud runners, the metadata ip can interact with our test machines
        run: |
          sudo iptables -I INPUT -s 169.254.169.254 -j DROP
          sudo iptables -I OUTPUT -d 169.254.169.254 -j DROP
      - name: Run tests
        env:
          LABEL: ${{ inputs.label }}
          EMULATE_TPM: true
          CREATE_VM: true
          USE_QEMU: true
          MEMORY: 4000
          CPUS: 2
        run: |
          export ISO=$(ls $PWD/*kairos*.iso)
          .github/encryption-tests.sh
